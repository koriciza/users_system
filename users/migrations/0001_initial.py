# Generated by Django 4.2.2 on 2023-07-07 06:42

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('school', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('superadmin', 'Superadmin'), ('supermanager', 'Supermanager'), ('employee', 'Employee'), ('student', 'Student'), ('parent', 'Parent')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ParentUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('userIdentity', models.CharField(max_length=12)),
                ('profile_photo', models.ImageField(null=True, upload_to='parent_imgs/')),
                ('profession', models.CharField(default='-', max_length=50, null=True)),
                ('addresse', models.CharField(default='-', max_length=50, null=True)),
                ('parent_phone_number1', models.CharField(default='-', max_length=50, null=True)),
                ('parent_phone_number2', models.CharField(default='-', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('users.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SuperAdminUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('userIdentity', models.CharField(max_length=12)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('users.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SuperManagerUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('userIdentity', models.CharField(max_length=12)),
                ('profile_photo', models.ImageField(null=True, upload_to='supermanager_imgs/')),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('is_otp_verified', models.BooleanField(default=False)),
                ('is_activated', models.BooleanField(default=False)),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='school.school')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('users.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StudentUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('userIdentity', models.CharField(max_length=12)),
                ('profile_photo', models.ImageField(null=True, upload_to='student_imgs/')),
                ('father_name', models.CharField(default='-', max_length=50, null=True)),
                ('mother_name', models.CharField(default='-', max_length=50, null=True)),
                ('addresse', models.CharField(default='-', max_length=50, null=True)),
                ('student_phone', models.CharField(default='-', max_length=12, null=True)),
                ('mother_phone', models.CharField(default='-', max_length=12, null=True)),
                ('father_phone', models.CharField(default='-', max_length=12, null=True)),
                ('matricule', models.CharField(max_length=10)),
                ('grade_level', models.CharField(max_length=10)),
                ('section', models.CharField(max_length=10)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.school')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('users.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('employee_service', models.CharField(choices=[('LIBRARY', 'Library'), ('FINANCE', 'Finance'), ('DISCIPLINE', 'Discipline'), ('TEACHER', 'Teacher'), ('SECRETAIRE', 'Secretaire')], max_length=20)),
                ('userIdentity', models.CharField(max_length=12)),
                ('matricule', models.CharField(max_length=10)),
                ('profile_photo', models.ImageField(null=True, upload_to='employee_imgs/')),
                ('addresse', models.CharField(default='-', max_length=50, null=True)),
                ('phone_number1', models.CharField(default='-', max_length=50, null=True)),
                ('phone_number2', models.CharField(default='-', max_length=50, null=True)),
                ('course', models.TextField(default='-', null=True)),
                ('years_of_exeprience', models.CharField(default='-', max_length=2)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.school')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('users.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
